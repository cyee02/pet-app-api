---
Description: Backend API server

Parameters:
  AMI:
    Type: String
    Default: ami-0d058fe428540cd89
    Description: The AMI to use.
  GitUrl:
    Type: String
    Default: "https://github.com/cyee02/pet-app-api.git"
    Description: Git repo to clone from
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    Description: Enter instance size. Default is t2.micro.
  Key:
    Type: String
    Default: key
    Description: The key used to access the instance.
  MyIP:
    Type: String
    Default: 218.212.0.0/16
    Description: Your IP address to restrict SSH to instance
  NodeVersion:
    Type: String
    Default: "16"
    Description: Node version to run
  SubnetId:
    Type: String
    Default: subnet-06e2733a9d2a99023
    Description: Subnet to deploy the instance
  VpcId:
    Type: String
    Default: vpc-0bd20ab0dd184d3f0
    Description: VPC to deploy the instance

Resources:
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for backend-api'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - Description: 'Allow SSH only from my IP'
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp:  !Ref MyIP
        - Description: 'HTTP api request'
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp:  0.0.0.0/0
        - Description: 'HTTPs api request'
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp:  0.0.0.0/0
          # Update to allow http/https request only from frontend
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref Server

  ServerRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "backend-api"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "DynamodbPolicy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - dynamodb:GetItem
              - dynamodb:BatchGetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              Resource: "*"
        - PolicyName: "S3Policy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - s3:Put*
              - s3:Get*
              - s3:Describe*
              Resource: "*"

  ServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles: 
        - !Ref ServerRole

  Server:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref ServerInstanceProfile
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref Key
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup

      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          sudo su

          export HOME_DIR='/home/ubuntu'

          echo "=== Begin Userdata ==="
          apt-get update
          sudo snap install node --classic --channel ${NodeVersion}/stable
          npm install forever -g

          git clone ${GitUrl} $HOME_DIR/pet-app-api
          cd $HOME_DIR/pet-app-api
          npm install

          iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 4000

          npm start

          echo "=== End Userdata - SUCCESS ==="
